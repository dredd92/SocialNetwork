@using SocialNetwork.PL.WebApp.Models;
@using SocialNetwork.PL.WebApp;

@{
    bool isAbleToLogIn = false;

    Validation.RequireFields("username", "password");

    if (User.Identity.IsAuthenticated)
    {
        Response.Redirect("~/Admin");
    }

    if (IsPost && Validation.IsValid())
    {
        var username = Request["username"];
        var password = Request["password"];
        try
        {
            isAbleToLogIn = Auth.CanLogInAdmin(username, password);
        }
        catch (Exception e)
        {
            Common.Log.Fatal($"Site: /User/LogIn, Message: {e.Message} {e.StackTrace}");
            Response.SetStatus(HttpStatusCode.InternalServerError);
            Response.Redirect("~/Error");
        }

        if (isAbleToLogIn)
        {
            FormsAuthentication.SetAuthCookie(username, false);
            Response.Redirect("~/Admin/Login");
        }
    }

    Layout = "~/_Layouts/_AdminLayout.cshtml";
    Page.Title = "Admin log in page";
}
<div class="col-xs-5">
    @if (IsPost)
    {
        if (!Validation.IsValid())
        {
        <div class="alert alert-danger">
            @Html.ValidationSummary();
        </div>
        }
        else if (!isAbleToLogIn)
        {
        <div class="alert alert-danger">
            <p>Wrong username or password. Please, try again</p>
        </div>
        }
    }
    <form class="form-group" method="post">
        <fieldset>
            <label class="label label-default">Username</label>
            <input class="form-control" name="username" type="text" />
        </fieldset>
        <fieldset>
            <label class="label label-default">Password</label>
            <input class="form-control" name="password" type="password" />
        </fieldset>
        <button class="btn pull-right" type="submit">Log in</button>
    </form>
</div>