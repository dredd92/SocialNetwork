@using SocialNetwork.PL.WebApp
@using SocialNetwork.Entities

@{
    if (!User.Identity.IsAuthenticated)
    {
        Response.Redirect("~");
    }

    if (IsPost)
    {
        Common.Log.Error("Location: /User/RecieveMessagesForDialog Message: Cannot use 'POST' to send a request for this location");
        Response.Redirect("~/Error/Error400");
    }

    if (User.IsInRole("admin"))
    {
        Common.Log.Error("Location: /User/ReceiveMessagesForDialog, Message: Admins don't have access to this location");
        Response.Redirect("~/Error/Error400");
    }

    if (!Request["secondPersonId"].IsInt())
    {
        Common.Log.Error("Location: /User/ReceiveMessagesForDialog, Message: Sender's id must be a number");
        Response.Redirect("~/Error/Error400");
    }

    int secondPerson = int.Parse(Request["secondPersonId"]);
    User curUser = null;
    User anotherUser = null;
    IEnumerable<Message> messages = null;
    try
    {
        curUser = Common.UserLogic.GetUserByName(User.Identity.Name);

        if (curUser == null)
        {
            Common.Log.Error("Location: /User/ReceiveMessagesForDialog, Message: Current user was not found");
            Response.Redirect("~/Error/Error404");
        }

        anotherUser = Common.UserLogic.GetUserById(secondPerson);

        if (anotherUser == null)
        {
            Common.Log.Error($"Location: /User/ReceiveMessagesForDialog, Message: Receiver with an id {secondPerson} was not found");
            Response.Redirect("~/Error/Error404");
        }

        messages = Common.UserMessagesLogic.GetUnreadDialogMessages(curUser.Id, anotherUser.Id);
    }
    catch (Exception e)
    {
        Common.Log.Fatal($"Site: /User/ReceiveMessagesForDialog Message: {e.Message} {e.StackTrace}");
        Response.Redirect("~/Error/Error500");
    }

    if (IsAjax)
    {
        foreach (var message in messages)
        {
            <li class="list-group-item text-right">
                <p>
                    <label class="label label-info">@message.DateSent.ToShortDateString()</label>
                    @message.Contents
                    <img src="@(anotherUser.Image ?? "/User/_Images/no_pic.png")"
                            class="img-circle img-thumbnail img-responsive"
                            width="50"
                            height="40" />
                </p>
            </li>
        }
}
}